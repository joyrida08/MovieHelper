#!/bin/sh

####################################################################################
########################## License Agreement #######################################

    # MovieHelper - A tool that automates the naming and converting of video Files
    # Copyright (C) 2015  Ricky Grassmuck

    # This program is free software: you can redistribute it and/or modify
    # it under the terms of the GNU General Public License as published by
    # the Free Software Foundation, either version 3 of the License, or
    # (at your option) any later version.

    # This program is distributed in the hope that it will be useful,
    # but WITHOUT ANY WARRANTY; without even the implied warranty of
    # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    # GNU General Public License for more details.

    # You should have received a copy of the GNU General Public License
    # along with this program.  If not, see <http://www.gnu.org/licenses/>.
    
    # For questions feel free to email me at ricky.grassmuck<@>gmail.com

######################## End License Agreement #####################################
####################################################################################


#######################################################
#              Default Configurations                 #
#######################################################

#               [media_root]           
# Root folder of your media collection.
# This folder should contain the directory where
# your completed movies are downloaded to. Its 
# recommended(but not required) that you have a 
# seperate folder for ncomplete downloads
# uncomment to set
# media_root="/path/to/media"

#               [input_dir]
# The directory that contains the unprocessed movies
# If not located in your media_root, be sure to use
# the full pathname
# uncomment to set
# input_dir="$media_root/movie_downloads"

#               [working_dir]
# This is where the unprocessed movie files are moved
# to for processing. If the folder doesnt exist the
# program will attempt to create it.
# Uncomment to set
# working_dir="$media_root/working_dir"

#               [Verbosity]
# Controls the default verbosity of ffmpeg
# during the conversion process

verb=1

#######################################################
#           End Default Configurations                #
#######################################################


envTest() {
    envCheck=0

    local ffmpeg_check=`command -v ffmpeg`
    if [ ! "$ffmpeg_check" ]; then
        echo "Please install ffmpeg"
        local ffmpeg=0
    else
        local ffmpeg=1
    fi

    local javaVer=`java -version 2>&1 | grep "openjdk version" | awk '{print $3}' | tr -d \" | sed 's/\.//g'`
    local javaTest=`echo ${javaVer:0:2}`
    local test=`echo $javaTest`

    if [ "$test" -ge 16 ]; then 
        local java=1
    else 
        local java=0
    fi

    if [ $java == 0 ]; then
        echo "Please install java 1.7 or newer"
        envCheck=1
    fi
    if [ $ffmpeg == 0 ]; then
        echo "Please Install ffmpeg"
        envCheck=1
    fi
}

usage(){
    echo "Usage: "
    echo "      sh movie_process.sh [-(p|c)] [ -i /path/to/input_dir ]"
    echo "               [ -w /path/to/working_dir ] [ -v number ]"
    echo ""
    echo "      Options:"
    echo "         -p  -   Only extract and rename movie files, does not convert the Files"
    echo "         -c  -   Opposite of -p, This option will only convert mkv's and avi's in your working directory"
    echo "         -i  -   Sets the input input directory variable"
    echo "         -w  -   Sets the working directory variable"
    echo "         -v  -   Sets the verbosity of ffmpegs output | Options: 0 - Quiet , 1 - Normal(default)"
    echo""
    echo "      Note: The program runs both Process and Convert. The default configuration file settings are used"
}